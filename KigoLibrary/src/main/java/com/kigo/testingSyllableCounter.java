/*
 * Software Engineering Project
 * ---------------------------------
 * This program tests the SyllableCounter1 function by processing a file of lyrics,
 * counting the syllables in each word, and outputting the results to a file.
 * 
 * Features:
 * - Reads words from a given text file containing song lyrics.
 * - Uses the SyllableCounter1 class to determine the syllable count for each word.
 * - Outputs the syllable counts along with the corresponding words to a file.
 * - Generates a polished version of the lyrics with one word per line for comparison.
 * - Includes a method to compare the results with a reference file for accuracy.
 * 
 * This program demonstrates file I/O operations, text processing, and testing methodology
 * in Java, with applications in natural language processing and software testing.
 * 
 * Author: KIGO - Sam Allen, Kelly Lowrance, Noah Kabel
 * Date: [FALL 2024]
 * Course: Introduction to Software Engineering
 * @ The University of Colorado Colorado Springs
 */
package com.kigo;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class testingSyllableCounter {
	/*
	 * -------------- Main Method ---------------- 
	 * This method sets up input and
	 * output files, processes the lyrics file word by word, and counts syllables
	 * using the SyllableCounter1 function. Results are written to an output file,
	 * and polished lyrics are saved to a separate file. Finally, it calls the
	 * comparison method to evaluate the accuracy of the syllable counts.
	 */
	public static void main(String[] args) throws IOException {

		// Set up test input files.
		// final String TEST_FILE = "joji-your-man_lryics.txt";
		// final String TEST_FILE = "rap-god-polished.txt";
		// final String TEST_FILE = "1000_words_source.txt";
		//final String TEST_FILE = "car-radio-lyrics.txt";
		final String TEST_FILE = "blinding-lights-lyrics.txt";
		
		File testFile = new File(TEST_FILE);
		Scanner fileReader = new Scanner(testFile);

		// Output files.
		final String OUT_FILE = "outputFile.txt";
		final String LYRICS_OUT = "polished-lyrics.txt";

		// Prints to outputFile.txt which will contain syllable count followed by the
		// word.
		FileWriter outWriter = new FileWriter(OUT_FILE);
		// Prints polished lyrics, one word to a line for ease of creating the compare
		// file.
		FileWriter lyricsOutWriter = new FileWriter(LYRICS_OUT);

		// Variables to store current word, syllable count, and total syllable count.
		String word = "";
		int syllables = 0;
		int totalSyllables = 0;

		// Process each word in the input file.
		while (fileReader.hasNext()) {

			word = fileReader.next();
			syllables = SyllableCounter1.countSyllables(word);
			System.out.println(syllables + " " + word);
			// Prints results of syllable count to outputFile.
			outWriter.write(syllables + " " + word + "\n");
			// Prints polished lyrics one word per line.
			lyricsOutWriter.write(word + "\n");
			
			// Increment total syllable count with this word's count.
			totalSyllables += syllables;
		} // end while

		System.out.println("\n Total Syllables Counted in file: " + totalSyllables);

		outWriter.flush();
		outWriter.close();
		fileReader.close();

		System.out.println("\n");
		compareResultsByFiles();

	} // end main

	/*
	 *  -------------- compareResultsByFiles Method ---------------- 
	 * This method compares the output file generated by the program with a 
	 * reference file. It validates the syllable count and word accuracy for each
	 * line, printing mismatches and a summary of results.
	 * 
	 * Parameters: None (Uses pre-defined file names for comparison)
	 * 
	 * Throws: IOException if there is an issue with file reading.
	 */
	public static void compareResultsByFiles() throws IOException {
		
		// Generate references for output files used for comparisons.
		// Output file generated by main
		final String OUTPUT_FILE = "outputFile.txt";
		// final String COMPARE_FILE = "rap-god-syllables.txt";
		
		// Reference file with correct syllable counts //
		final String COMPARE_FILE = "blinding-lights-syllables.txt";
		// final String COMPARE_FILE = "1000-correct-syllables.txt";
		

		File compareFile = new File(COMPARE_FILE);
		File outputFile = new File(OUTPUT_FILE);

		Scanner readAnswers = new Scanner(compareFile);
		Scanner readOutput = new Scanner(outputFile);

		int lineNumber = 0;
		int matchCount = 0;
		int totalLines = 0;

		// Compare files line by line ensuring both 
		while ( readAnswers.hasNext() && readOutput.hasNext() ) {
			lineNumber++;

			// Read syllable count and word from both files
			int correctSyllables = readAnswers.nextInt();
			String word = readAnswers.next();

			int outputSyllables = readOutput.nextInt();
			String outputWord = readOutput.next();

			// Compare both syllable count and word
			if (correctSyllables == outputSyllables && word.equals(outputWord)) {
				matchCount++;
			} else {
				System.out.printf("Mismatch at line %d", lineNumber);
				System.out.printf("\nWord :%s\n", word);
				System.out.printf("Expected: %d\n", correctSyllables);
				System.out.printf("Found   : %d\n", outputSyllables);
				System.out.println();
			}

			totalLines++;
		} // end while
		readAnswers.close();
		readOutput.close();

		// Print summary statistics
		System.out.println("\nComparison Summary-");
		System.out.printf("Total words compared: %d%n", totalLines);
		System.out.printf("Matching words: %d%n", matchCount);
		System.out.printf("Accuracy: %.2f%%%n", (matchCount * 100.0) / totalLines);

	} // end compareResults

} // end testingSyllableCounter
